library(reticulate)
#use_python('/Users/lin/Documents/DS_blog/docs/_posts/2022-09-03-p#roduct-analysis-report/product_analysis_venv/bin/python')
use_virtualenv('/Users/lin/Documents/DS_blog/docs/_posts/2022-09-03-product-analysis-report/product_analysis_venv/', required = TRUE)
reticulate::repl_python()
## Identify the categories of sales scripts
reticulate::repl_python()
library(distill)
library(rmarkdown)
distill::create_post("Homelike_Assignment_code")
getwd
getwd()
setwd("~/Documents/DS_blog/docs")
distill::create_post("Homelike_Assignment_code")
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(tidyverse) # data manipulation and visualization
library(ggplot2)
library(GGally)
library(ggstatsplot)
library(plotly)
library(highcharter)
library(cluster)  ### working with clusters
library(factoextra) ## cal and visualizing clusters
library(gridExtra) ## plotting multiple graphs
library(DT)
library(stringr)
library(stringi)
library(modelr)     # provides easy pipeline modeling functions
library(broom)      # helps to tidy up model outputs
library(car)  ## for regression
library(haven)
library(caret)
library(h2o)
library(rsample)
bq_results_20210718 <- read_csv("bq-results-20210718.csv")
bq_results_20210717 <- read_csv("bq-results-20210717.csv")
bq_results_20210716 <- read_csv("bq-results-20210716.csv")
bq_results_20210715 <- read_csv("bq-results-20210715.csv")
bq_results_20210714 <- read_csv("bq-results-20210714.csv")
data14 <- bq_results_20210714
data15 <- bq_results_20210715
data16 <- bq_results_20210716
data17 <- bq_results_20210717
data18 <- bq_results_20210718
datatable(data18[1:100, ]) ## view the data
library(readr)
library(tidyverse) # data manipulation and visualization
library(ggplot2)
library(GGally)
library(ggstatsplot)
library(plotly)
library(highcharter)
library(cluster)  ### working with clusters
library(factoextra) ## cal and visualizing clusters
library(gridExtra) ## plotting multiple graphs
library(DT)
library(stringr)
library(stringi)
library(modelr)     # provides easy pipeline modeling functions
library(broom)      # helps to tidy up model outputs
library(car)  ## for regression
library(haven)
library(caret)
library(h2o)
library(rsample)
bq_results_20210718 <- read_csv("bq-results-20210718.csv")
bq_results_20210717 <- read_csv("bq-results-20210717.csv")
bq_results_20210716 <- read_csv("bq-results-20210716.csv")
bq_results_20210715 <- read_csv("bq-results-20210715.csv")
bq_results_20210714 <- read_csv("bq-results-20210714.csv")
data14 <- bq_results_20210714
data15 <- bq_results_20210715
data16 <- bq_results_20210716
data17 <- bq_results_20210717
data18 <- bq_results_20210718
#### Total number of unique visitors
unique_visitors_count<- data18 %>%
select(visitor_id)%>%
na.omit()%>%
count(visitor_id)
### Total number of unique sessions
unique_session_count <- data18 %>%
select(session_id)%>%
na.omit() %>%
count(session_id)
#### Total number of unique visitors
unique_visitors_count<- data18 %>%
dplyr::select(visitor_id)%>%
na.omit()%>%
count(visitor_id)
### Total number of unique sessions
unique_session_count <- data18 %>%
select(session_id)%>%
na.omit() %>%
count(session_id)
#### Total number of unique visitors
unique_visitors_count<- data18 %>%
dplyr::select(visitor_id)%>%
na.omit()%>%
count(visitor_id)
### Total number of unique sessions
unique_session_count <- data18 %>%
select(session_id)%>%
na.omit() %>%
count(session_id)
h2o.shutdown()
